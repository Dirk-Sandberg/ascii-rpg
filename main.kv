#:import TextLog text_log.TextLog
#:import NoTransition kivy.uix.screenmanager.NoTransition
#:include inventory.kv
#:include traitsscreen.kv
#:include outlined_boxlayout.kv

ScreenManager:
    Screen:
        name: 'home_screen'
        BoxLayout:
            orientation: 'vertical'
            # Main game UI
            id: main_ui
            size_hint: 1, 1
            Label:
                id: toolbar
                size_hint: 1, .1
                text: "Health: " + str(app.player.current_health) + '/' + str(app.player.max_health) + " Floor: " + str(app.floor) + " Base Damage: " + str(app.player.attack) + " Base Defense: " + str(app.player.defense)
                canvas.before:
                    Color:
                        rgba: (1-app.player.current_health/app.player.max_health),app.player.current_health/app.player.max_health,0,1
                    Rectangle:
                        size: self.width * (app.player.current_health/app.player.max_health), self.height
                        pos: self.pos
            BoxLayout:
                # Maybe make this a screenmanager and toggle between ATK vs SPELL vs NON-ATK phase
                size_hint: 1, .7
                orientation: 'vertical'
                OutlinedBoxLayout:
                    Label:
                        id: combat
                        markup: True
                Label:
                    size_hint: 1, .1
                    id: monster_toolbar
                    text: '' if not app.monster else "Health: " + str(app.monster.current_health) + '/' + str(app.monster.max_health) + " Base Damage: " + str(app.monster.attack) + " Base Defense: " + str(app.monster.defense)
                    canvas.before:
                        Color:
                            rgba: (0,0,0,0) if not app.monster else ((1-app.monster.current_health/app.monster.max_health),app.monster.current_health/app.monster.max_health,1,1)
                        Rectangle:
                            size: 0 if not app.monster else (self.width * (app.monster.current_health/app.monster.max_health)), self.height
                            pos: self.pos
                Label:
                    text: '' if not app.monster else "Health: " + str(app.monster.current_health) + '/' + str(app.monster.max_health) + " Base Damage: " + str(app.monster.attack) + " Base Defense: " + str(app.monster.defense)
#                    text: str(0 if not app.monster else str(app.monster.current_health) +'/'+ str(app.monster.max_health))


                TextLog:
                    id: log
                    markup: True
                    text_size: self.size
                    size_hint: 1, .2
                GridLayout:
                    size_hint: 1, .1
                    rows: 1
                    Button:
                        text: "ATTACK"
                        on_release:
                            app.attack()
                        disabled: app.is_home
                    Button:
                        text: "MAGIC"
                        on_release: app.cast_spell()
                        disabled: app.is_home
                    Widget:
                    Widget:
                    Button:
                        text: "EMBARK"
                        on_release:
                            app.embark()
                        disabled: not app.is_home
                    Button:
                        text: "BAG"
                        on_release:
                            root.current = 'inventory_screen'
                        disabled: not app.is_home
                    Button:
                        text: "TRAITS"
                        on_release:
                            root.current = 'traits_screen'
                        disabled: not app.is_home

    InventoryScreen:
        name: 'inventory_screen'
        id: inventory
    TraitsScreen:
        name: 'traits_screen'
        id: traits_screen